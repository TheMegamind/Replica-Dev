/**
 *  MIT License
 *  Copyright 2023 Daniel Winks (daniel.winks@gmail.com)
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

#include dwinks.UtilitiesAndLoggingLibrary

metadata {
    definition(
        name: 'Sonos Advanced Favorites (Mod)',
        version: '0.7.4',
        namespace: 'dwinks',
        author: 'Daniel Winks',
        component: true,
        importUrl: 'https://raw.githubusercontent.com/DanielWinks/Hubitat-Public/main/Drivers/Component/SonosAdvFavorites.groovy'
    ) {
        capability 'Actuator'
        command 'getFavorites'
    }

    preferences {
        input name: 'enableJsonAttribute', type: 'bool', title: 'Enable JSON Attribute', defaultValue: false, required: true
        input name: 'omitImage', type: 'bool', title: 'Omit Image from JSON', defaultValue: false, required: true
    }
}

void initialize() { configure() }
void configure() { getFavorites() }
void getFavorites() { parent?.getFavorites() }
void setFavorites(String favorites) {
    state.favorites = favorites
    if (settings.enableJsonAttribute) {
        def jsonFavorites = htmlToJson(favorites)
        sendEvent(name: 'jsonFavorites', value: jsonFavorites, isStateChange: true)
    }
}

String htmlToJson(String html) {
    def json = []
    def matcher = html =~ /<li>(Favorite #[\d]+ .*?)<\/li>/
    matcher.each { match ->
        def favorite = [:]
        def itemMatcher = match[1] =~ /Favorite #(\d+) (.*?)<img src="(.*?)"/
        if (itemMatcher.find()) {
            favorite.id = itemMatcher[0][1]
            favorite.name = itemMatcher[0][2]
            if (!settings.omitImage) {
                favorite.image = itemMatcher[0][3]
            }
            json << favorite
        }
    }
    return groovy.json.JsonOutput.toJson(json)
}
